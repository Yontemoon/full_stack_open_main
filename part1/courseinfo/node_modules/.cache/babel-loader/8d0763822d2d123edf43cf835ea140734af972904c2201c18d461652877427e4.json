{"ast":null,"code":"var _jsxFileName = \"/home/monte/repos/full_stack_open/part1/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const course = \"Half stack application development\";\n  const part1 = \"Fundamentals of React\";\n  const exercises1 = 10;\n  const part2 = \"Using props to pass data\";\n  const exercises2 = 7;\n  const part3 = 'State of a component';\n  const exercises3 = 14;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n  function Header() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  function Content() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Part, {\n        part: part1,\n        exercise: exercises1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Part, {\n        part: part2,\n        exercise: exercises2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Part, {\n        part: part3,\n        exercise: exercises3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  function Total() {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number of exercises \", exercises1 + exercises2 + exercises3]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n};\n_c = App;\nconst Part = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.part, \" and \", props.exercise]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c2 = Part;\nconst t = [1, 2, 3];\nconst m1 = t.map(value => '');\nconsole.log(t);\nconsole.log(m1);\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Part\");","map":{"version":3,"names":["App","course","part1","exercises1","part2","exercises2","part3","exercises3","_jsxDEV","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Content","Total","_Fragment","Part","part","exercise","_c","props","_c2","t","m1","map","value","console","log","$RefreshReg$"],"sources":["/home/monte/repos/full_stack_open/part1/src/App.js"],"sourcesContent":["const App = () => {\n  const course = \"Half stack application development\";\n  const part1 = \"Fundamentals of React\";\n  const exercises1 = 10;\n  const part2 = \"Using props to pass data\";\n  const exercises2 = 7;\n  const part3 = 'State of a component';\n  const exercises3 = 14;\n\n\n  return (\n    <div>\n      <Header />\n      <Content />\n      <Total />\n    </div>\n  );\n\n  function Header() {\n    return <h1>{course}</h1>;\n  }\n\n  function Content () {\n    return (\n      <>\n        <Part part={part1} exercise={exercises1}/>\n        <Part part={part2} exercise={exercises2}/>\n        <Part part={part3} exercise={exercises3}/>\n\n      </>\n    )\n  }\n  function Total () {\n    return <p>Number of exercises {exercises1 + exercises2 + exercises3}</p>\n  }\n}\n\nconst Part = (props) => {\n  return (\n    <>\n      <p>\n       {props.part} and {props.exercise}\n      </p>\n    </>\n\n  )\n}\n\nconst t = [1,2,3];\nconst m1 = t.map(value => '');\nconsole.log(t)\nconsole.log(m1)\n\n\n\nexport default App;\n"],"mappings":";;;AAAA,MAAMA,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMC,MAAM,GAAG,oCAAoC;EACnD,MAAMC,KAAK,GAAG,uBAAuB;EACrC,MAAMC,UAAU,GAAG,EAAE;EACrB,MAAMC,KAAK,GAAG,0BAA0B;EACxC,MAAMC,UAAU,GAAG,CAAC;EACpB,MAAMC,KAAK,GAAG,sBAAsB;EACpC,MAAMC,UAAU,GAAG,EAAE;EAGrB,oBACEC,OAAA;IAAAC,QAAA,gBACED,OAAA,CAACE,MAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVN,OAAA,CAACO,OAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXN,OAAA,CAACQ,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;EAGR,SAASJ,MAAMA,CAAA,EAAG;IAChB,oBAAOF,OAAA;MAAAC,QAAA,EAAKR;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1B;EAEA,SAASC,OAAOA,CAAA,EAAI;IAClB,oBACEP,OAAA,CAAAS,SAAA;MAAAR,QAAA,gBACED,OAAA,CAACU,IAAI;QAACC,IAAI,EAAEjB,KAAM;QAACkB,QAAQ,EAAEjB;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC1CN,OAAA,CAACU,IAAI;QAACC,IAAI,EAAEf,KAAM;QAACgB,QAAQ,EAAEf;MAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC1CN,OAAA,CAACU,IAAI;QAACC,IAAI,EAAEb,KAAM;QAACc,QAAQ,EAAEb;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA,eAE1C,CAAC;EAEP;EACA,SAASE,KAAKA,CAAA,EAAI;IAChB,oBAAOR,OAAA;MAAAC,QAAA,GAAG,sBAAoB,EAACN,UAAU,GAAGE,UAAU,GAAGE,UAAU;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC1E;AACF,CAAC;AAAAO,EAAA,GAnCKrB,GAAG;AAqCT,MAAMkB,IAAI,GAAII,KAAK,IAAK;EACtB,oBACEd,OAAA,CAAAS,SAAA;IAAAR,QAAA,eACED,OAAA;MAAAC,QAAA,GACEa,KAAK,CAACH,IAAI,EAAC,OAAK,EAACG,KAAK,CAACF,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC,gBACJ,CAAC;AAGP,CAAC;AAAAS,GAAA,GATKL,IAAI;AAWV,MAAMM,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;AACjB,MAAMC,EAAE,GAAGD,CAAC,CAACE,GAAG,CAACC,KAAK,IAAI,EAAE,CAAC;AAC7BC,OAAO,CAACC,GAAG,CAACL,CAAC,CAAC;AACdI,OAAO,CAACC,GAAG,CAACJ,EAAE,CAAC;AAIf,eAAezB,GAAG;AAAC,IAAAqB,EAAA,EAAAE,GAAA;AAAAO,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAP,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}