{"ast":null,"code":"var _jsxFileName = \"/home/monte/repos/full_stack_open_main/part5/bloglist-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport Notification from './components/Notification';\nimport LoginForm from './components/LoginForm';\nimport Toggleable from './components/Togglable';\nimport BlogForm from './components/BlogForm';\n// import notificationReducer from './reducers/notificationReducer'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [showAll, setShowAll] = useState(true);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const blogFormRef = useRef();\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogUser\");\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      console.log(user);\n      blogService.setToken(user.token);\n      setShowAll(false);\n      getAllBlogs();\n    }\n  }, []);\n  const getAllBlogs = async () => {\n    const blogs = await blogService.getAll();\n    setBlogs(blogs);\n  };\n  const addBlog = async blogObject => {\n    blogFormRef.current.toggleVisibility();\n    const newBlog = await blogService.create(blogObject);\n    console.log(newBlog);\n    setBlogs(blogs.concat(newBlog));\n    console.log(blogs);\n    dispatch({\n      type: 'BLOG_ADDED'\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'RESET'\n      });\n    }, 5000);\n  };\n  const blogForm = () => {\n    return /*#__PURE__*/_jsxDEV(Toggleable, {\n      buttonLabel: \"New Blog\",\n      ref: blogFormRef,\n      children: /*#__PURE__*/_jsxDEV(BlogForm, {\n        createBlog: addBlog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem(\"loggedBlogUser\", JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      setShowAll(false);\n      setUsername(\"\");\n      setPassword(\"\");\n    } catch (exception) {\n      dispatch({\n        type: 'USER_ERROR'\n      });\n      setTimeout(() => {\n        dispatch({\n          type: 'RESET'\n        });\n      }, 5000);\n    }\n  };\n\n  // const blogsToShow = showAll === true ? blogs : blogs.filter(blog => blog.user.id === user._id)\n\n  const logoutHandler = () => {\n    window.localStorage.removeItem(\"loggedBlogUser\");\n    setUser(null);\n    setShowAll(true);\n  };\n  const byLikes = (blog1, blog2) => blog2.likes - blog1.likes;\n  const handleRemoveBlog = async blogToDelete => {\n    const confirm = window.confirm(`Are you sure you want to delete ${blogToDelete.user.name}'s ${blogToDelete.title}`);\n    if (confirm) {\n      blogService.remove(blogToDelete.id);\n      setBlogs(blogs.filter(blog => blog.id !== blogToDelete.id));\n      dispatch({\n        type: 'BLOG_DELETE'\n      });\n      setTimeout(() => {\n        dispatch({\n          type: 'RESET'\n        });\n      }, 5000);\n    }\n  };\n  const handleUpdateBlog = async blogToUpdate => {\n    blogService.update(blogToUpdate.id, blogToUpdate);\n    setBlogs(blogs.map(blog => blog.id !== blogToUpdate.id ? blog : blogToUpdate));\n    dispatch({\n      type: 'BLOG_UPDATE'\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'RESET'\n      });\n    }, 10000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), notification, !user && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        handleLogin: handleLogin,\n        username: username,\n        handlePasswordChange: ({\n          target\n        }) => setPassword(target.value),\n        password: password,\n        handleUsernameChange: ({\n          target\n        }) => setUsername(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.name, \" is logged in. username is \", user.username, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logoutHandler,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 65\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), blogForm(), blogs.sort(byLikes).map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n        blog: blog,\n        user: user,\n        handleRemoveBlog: handleRemoveBlog,\n        handleUpdateBlog: handleUpdateBlog\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IKavUVSDBSY4cNHWLD+TJTv10/k=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Blog","blogService","loginService","Notification","LoginForm","Toggleable","BlogForm","useDispatch","useSelector","jsxDEV","_jsxDEV","App","_s","blogs","setBlogs","showAll","setShowAll","username","setUsername","password","setPassword","user","setUser","blogFormRef","dispatch","notification","state","loggedUserJSON","window","localStorage","getItem","JSON","parse","console","log","setToken","token","getAllBlogs","getAll","addBlog","blogObject","current","toggleVisibility","newBlog","create","concat","type","setTimeout","blogForm","buttonLabel","ref","children","createBlog","fileName","_jsxFileName","lineNumber","columnNumber","handleLogin","event","preventDefault","login","setItem","stringify","exception","logoutHandler","removeItem","byLikes","blog1","blog2","likes","handleRemoveBlog","blogToDelete","confirm","name","title","remove","id","filter","blog","handleUpdateBlog","blogToUpdate","update","map","handlePasswordChange","target","value","handleUsernameChange","onClick","sort","_c","$RefreshReg$"],"sources":["/home/monte/repos/full_stack_open_main/part5/bloglist-frontend/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport Toggleable from './components/Togglable'\nimport BlogForm from './components/BlogForm'\n// import notificationReducer from './reducers/notificationReducer'\nimport { useDispatch, useSelector } from 'react-redux'\n\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [showAll, setShowAll] = useState(true)\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [user, setUser] = useState(null)\n\n  const blogFormRef = useRef();\n  const dispatch = useDispatch()\n  const notification = useSelector((state) => state)\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogUser\")\n    if(loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      console.log(user)\n      blogService.setToken(user.token)\n      setShowAll(false)\n      getAllBlogs()\n    }\n    }\n  ,[])\n\n\n  const getAllBlogs = async () => {\n    const blogs = await blogService.getAll()\n    setBlogs(blogs)\n  } \n\n  const addBlog = async (blogObject) => {\n    blogFormRef.current.toggleVisibility();\n    const newBlog = await blogService.create(blogObject)\n    console.log(newBlog)\n    setBlogs(blogs.concat(newBlog))\n    console.log(blogs)\n    dispatch({type: 'BLOG_ADDED'})\n    setTimeout(() => {\n      dispatch({type: 'RESET'})\n    }, 5000);\n    \n  }\n\n  const blogForm = () => {\n    return(\n      <Toggleable buttonLabel=\"New Blog\" ref={blogFormRef}>\n        <BlogForm createBlog={addBlog}/>\n      </Toggleable>\n    )\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\"loggedBlogUser\", JSON.stringify(user))\n      blogService.setToken(user.token)\n      setUser(user)\n      setShowAll(false)\n      setUsername(\"\")\n      setPassword(\"\")\n    } catch (exception) {\n      dispatch({type: 'USER_ERROR'})\n      setTimeout(() => {\n        dispatch({type: 'RESET'})\n      }, 5000)\n    }\n  }\n\n\n  // const blogsToShow = showAll === true ? blogs : blogs.filter(blog => blog.user.id === user._id)\n\n  const logoutHandler = () => {\n    window.localStorage.removeItem(\"loggedBlogUser\");\n    setUser(null)\n    setShowAll(true)\n  }\n  \n  const byLikes = (blog1, blog2) => blog2.likes - blog1.likes\n\n  const handleRemoveBlog = async (blogToDelete) => {\n    const confirm = window.confirm(`Are you sure you want to delete ${blogToDelete.user.name}'s ${blogToDelete.title}`)\n    if (confirm) {\n      blogService.remove(blogToDelete.id)\n      setBlogs(blogs.filter(blog => blog.id !== blogToDelete.id))\n      dispatch({type: 'BLOG_DELETE'})\n      setTimeout(() => {\n        dispatch({type: 'RESET'})\n      }, 5000)\n    }\n  }\n\n  const handleUpdateBlog = async (blogToUpdate) => {\n    blogService.update(blogToUpdate.id, blogToUpdate)\n    setBlogs(blogs.map(blog => blog.id !== blogToUpdate.id ? blog : blogToUpdate))\n    dispatch({type: 'BLOG_UPDATE'})\n    setTimeout(() => {\n      dispatch({type: 'RESET'})\n    }, 10000)\n  }\n\n\n  return (\n    <div>\n      <h2>Blogs</h2>\n      {notification}\n      {!user && <div>\n        <LoginForm \n          handleLogin={handleLogin} \n          username={username} \n          handlePasswordChange={({target}) => setPassword(target.value)} \n          password={password} \n          handleUsernameChange={({target}) => setUsername(target.value)}/>\n        </div>\n      }\n\n      {user && <div>\n        <p>{user.name} is logged in. username is {user.username}<button onClick={logoutHandler}>Logout</button></p>\n        {blogForm()}\n        {blogs.sort(byLikes).map(blog =>\n          <Blog \n            key={blog.id} \n            blog={blog}\n            user={user} \n            handleRemoveBlog={handleRemoveBlog} \n            handleUpdateBlog={handleUpdateBlog}\n          />\n        )}\n      </div>}\n    </div>\n  )\n}\n\nexport default App\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}