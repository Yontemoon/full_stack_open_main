{"ast":null,"code":"var _jsxFileName = \"/home/monte/repos/full_stack_open_main/part5/bloglist-frontend/src/components/Togglable.js\",\n  _s = $RefreshSig$();\nimport { useState, forwardRef, useImperativeHandle } from 'react';\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Toggleable = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((props, refs) => {\n  _s();\n  //this visible section is reused in /components/Blog... maybe create a seperate function for this?\n  const [visible, setVisible] = useState(false);\n  const hideWhenVisible = {\n    display: visible ? \"none\" : \"\"\n  };\n  const showWhenVisible = {\n    display: visible ? \"\" : \"none\"\n  };\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n  useImperativeHandle(refs, () => {\n    return {\n      toggleVisibility\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: hideWhenVisible,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        children: props.buttonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: showWhenVisible,\n      children: [props.children, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleVisibility,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}, \"7Y5lBLdF9mkfoiy3F9Lk5HPUzvA=\")), \"7Y5lBLdF9mkfoiy3F9Lk5HPUzvA=\");\n_c2 = Toggleable;\nToggleable.displayName = \"Toggleable\";\nToggleable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n};\nexport default Toggleable;\nvar _c, _c2;\n$RefreshReg$(_c, \"Toggleable$forwardRef\");\n$RefreshReg$(_c2, \"Toggleable\");","map":{"version":3,"names":["useState","forwardRef","useImperativeHandle","PropTypes","jsxDEV","_jsxDEV","Toggleable","_s","_c","props","refs","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","children","style","onClick","buttonLabel","fileName","_jsxFileName","lineNumber","columnNumber","_c2","displayName","propTypes","string","isRequired","node","$RefreshReg$"],"sources":["/home/monte/repos/full_stack_open_main/part5/bloglist-frontend/src/components/Togglable.js"],"sourcesContent":["import { useState, forwardRef, useImperativeHandle } from 'react';\nimport PropTypes from \"prop-types\"\n\nconst Toggleable = forwardRef((props, refs) => {\n\n    //this visible section is reused in /components/Blog... maybe create a seperate function for this?\n    const [visible, setVisible] = useState(false);\n\n    const hideWhenVisible = {display: visible ? \"none\" : \"\"};\n    const showWhenVisible = {display: visible ? \"\" : \"none\"};\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    useImperativeHandle(refs, () => {\n        return {toggleVisibility}\n    })\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n            </div>\n            <div style={showWhenVisible}>\n                {/* This is where the blog form is... which in this case is the child. */}\n                {props.children} \n                <button onClick={toggleVisibility}>Cancel</button>\n            </div>\n        </div>\n    )\n})\nToggleable.displayName = \"Toggleable\"\n\nToggleable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired\n}\n\n\n\nexport default Toggleable"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,mBAAmB,QAAQ,OAAO;AACjE,OAAOC,SAAS,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,gBAAAC,EAAA,eAAGN,UAAU,CAAAO,EAAA,GAAAD,EAAA,CAAC,CAACE,KAAK,EAAEC,IAAI,KAAK;EAAAH,EAAA;EAE3C;EACA,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,eAAe,GAAG;IAACC,OAAO,EAAEH,OAAO,GAAG,MAAM,GAAG;EAAE,CAAC;EACxD,MAAMI,eAAe,GAAG;IAACD,OAAO,EAAEH,OAAO,GAAG,EAAE,GAAG;EAAM,CAAC;EAExD,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC3BJ,UAAU,CAAC,CAACD,OAAO,CAAC;EACxB,CAAC;EAEDT,mBAAmB,CAACQ,IAAI,EAAE,MAAM;IAC5B,OAAO;MAACM;IAAgB,CAAC;EAC7B,CAAC,CAAC;EAEF,oBACIX,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAKa,KAAK,EAAEL,eAAgB;MAAAI,QAAA,eACxBZ,OAAA;QAAQc,OAAO,EAAEH,gBAAiB;QAAAC,QAAA,EAAER,KAAK,CAACW;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACNnB,OAAA;MAAKa,KAAK,EAAEH,eAAgB;MAAAE,QAAA,GAEvBR,KAAK,CAACQ,QAAQ,eACfZ,OAAA;QAAQc,OAAO,EAAEH,gBAAiB;QAAAC,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC,kCAAC;AAAAC,GAAA,GA5BInB,UAAU;AA6BhBA,UAAU,CAACoB,WAAW,GAAG,YAAY;AAErCpB,UAAU,CAACqB,SAAS,GAAG;EACnBP,WAAW,EAAEjB,SAAS,CAACyB,MAAM,CAACC,UAAU;EACxCZ,QAAQ,EAAEd,SAAS,CAAC2B,IAAI,CAACD;AAC7B,CAAC;AAID,eAAevB,UAAU;AAAA,IAAAE,EAAA,EAAAiB,GAAA;AAAAM,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAN,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}